/*
 *     Generated by class-dump 3.1.2.
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2007 by Steve Nygard.
 */

#import "_ABAddressBookCopyLocalizedLabel.h"

@class NSMutableSet, NSSet, NSString;

@interface SBProcess : _ABAddressBookCopyLocalizedLabel
{
    NSMutableSet *_assertions;
    NSMutableSet *_limitlessAssertions;
    struct dispatch_queue_s *_assertionsQueue;
    NSString *_jobLabel;
    BOOL _running;
    unsigned int _terminateOnSuspension:1;
    unsigned int _frontmost:1;
    unsigned int _nowPlayingWithAudio:1;
    unsigned int _recordingAudio:1;
    unsigned int _usesSocketMonitoring:1;
    unsigned int _supportsBackgroundTaskAssertions:1;
    unsigned int _hasWatchdogAssertionsOut:1;
    int _backgroundJetsamPriority;
    int _currentJetsamPriority;
    int _activationDecounter;
    int _suspendCount;
    struct dispatch_queue_s *_suspendQueue;
    double _lastUnlimitedAssertionRemovedAbsoluteTime;
    struct dispatch_source_s *_backgroundPermissionCheckTimer;
    struct dispatch_source_s *_backgroundPermissionExpirationWarningTimer;
    struct dispatch_source_s *_taskCompletionAllowIdleSleepTimer;
    int _throttleUpCPUCount;
    int _throttleUpUICount;
    struct dispatch_queue_s *_throttleUpQueue;
    int _priority;
    NSSet *_allowedLockedFilePaths;
    int _pid;
    unsigned int _eventPort;
    unsigned int _taskNamePort;
    struct SBProcessTimes _times;
}

+ (void)_logJetsamPriorities;
+ (void)initialize;
+ (id)_allProcesses;
+ (id)processForPid:(int)fp8;
+ (id)launchedProcessWithBundleIdentifier:(id)fp8 path:(id)fp12 arguments:(id)fp16 environment:(id)fp20 standardOutputPath:(id)fp24 standardErrorPath:(id)fp28 machServices:(id)fp32 threadPriority:(long long)fp36 frontmost:(BOOL)fp44 backgroundJetsamPriority:(int)fp48 waitForDebugger:(BOOL)fp52 allowedLockedFilePaths:(id)fp56 terminateOnSuspension:(BOOL)fp60;
+ (int)defaultBackgroundJetsamPriority;
+ (void)_enumerateAllProcessesWithBlock:(id)fp(null);
+ (void)shutdownSuspendedProcessSockets;
+ (void)scheduleTaskCompletionAllowIdleSleep;
+ (void)cancelTaskCompletionAllowIdleSleep;
+ (void)hostwideUserElapsedCPUTime:(double *)fp8 systemElapsedCPUTime:(double *)fp12 idleElapsedCPUTime:(double *)fp16;
- (id)initWithPid:(int)fp8 frontmost:(BOOL)fp12 backgroundJetsamPriority:(int)fp16 jobLabel:(id)fp20 eventPortName:(id)fp24 allowedLockedFilePaths:(id)fp28 terminateOnSuspension:(BOOL)fp32 execTime:(double)fp36;
- (void)dealloc;
- (BOOL)isRunning;
- (void)setRunning:(BOOL)fp8;
- (unsigned int)hash;
- (BOOL)isEqual:(id)fp8;
- (id)name;
- (id)debugDescription;
- (id)description;
- (BOOL)usesSocketMonitoring;
- (void)setUsesSocketMonitoring:(BOOL)fp8;
- (BOOL)supportsBackgroundTaskAssertions;
- (void)setSupportsBackgroundTaskAssertions:(BOOL)fp8;
- (BOOL)isRecordingAudio;
- (void)setRecordingAudio:(BOOL)fp8;
- (BOOL)hasWatchdogAssertionsOut;
- (void)setHasWatchdogAssertionsOut:(BOOL)fp8;
- (BOOL)isFrontmost;
- (BOOL)hasResumeAssertion;
- (void)setFrontmost:(BOOL)fp8;
- (BOOL)isNowPlayingWithAudio;
- (void)setNowPlayingWithAudio:(BOOL)fp8;
- (int)backgroundJetsamPriority;
- (int)currentJetsamPriority;
- (BOOL)terminateOnSuspension;
- (int)suspendCount;
- (BOOL)suspend;
- (BOOL)resume;
- (BOOL)throttleUpCPU;
- (BOOL)throttleDownCPU;
- (BOOL)throttleUpUI;
- (BOOL)throttleDownUI;
- (void)assertionsQueue_scheduleTaskCompletionAllowIdleSleep;
- (void)assertionsQueue_cancelTaskCompletionAllowIdleSleep;
- (BOOL)changeCounter:(int *)fp8 change:(int)fp12 queue:(struct dispatch_queue_s *)fp16 ifBlockSucceeds:(id)fp(null);
- (BOOL)incrementCounter:(int *)fp8 queue:(struct dispatch_queue_s *)fp12 ifBlockSucceeds:(id)fp(null);
- (BOOL)decrementCounter:(int *)fp8 queue:(struct dispatch_queue_s *)fp12 ifBlockSucceeds:(id)fp(null);
- (id)lockedFilePathsIgnoringAllowed;
- (void)watchdogTerminateWithReason:(int)fp8 format:(id)fp12;
- (void)_notifyOfExpirationWarning;
- (void)dispatchSharedLockCheck;
- (int)suspendQueue_currentJetsamPriority;
- (void)suspendQueue_updateJetsamPriority;
- (BOOL)suspendQueue_taskSuspend;
- (BOOL)suspendQueue_taskResume;
- (BOOL)suspendQueue_taskShutdownSockets:(int)fp8;
- (int)priority;
- (BOOL)throttleUpQueue_setPriority:(int)fp8;
- (void)killWithSignal:(int)fp8;
- (void)waitToExecOrExit;
- (void)_forceCrashReportWithReason:(int)fp8 description:(id)fp12;
- (BOOL)isBeingDebugged;
- (BOOL)assertionsQueue_isBeingDebugged;
- (BOOL)isBeingPtraced;
- (double)elapsedCPUTime;
- (double)execTime;
- (void)markWatchdogCPUTimes;
- (void)assertionsQueue_markWatchdogCPUTimes;
- (id)_crashReportCPUUsageInfo;
- (id)_crashReportThermalsInfo;
- (void)addAssertion:(id)fp8;
- (void)removeAssertion:(id)fp8;
- (void)removeAllAssertions;
- (id)assertions;
- (double)remainingAllowedAssertionDuration;
- (double)assertionsQueue_permittedBackgroundDuration;
- (struct dispatch_source_s *)assertionsQueue_setupOneShotTimer:(double)fp8 withBlock:(id)fp(null);
- (void)assertionsQueue_updateBackgroundPermissionCheckTimer;
- (unsigned int)taskNamePort;
- (unsigned int)eventPort;
- (int)pid;
- (int)throttleUpUICount;
- (int)throttleUpCPUCount;
- (id)jobLabel;
- (void)setJobLabel:(id)fp8;
- (id)allowedLockedFilePaths;
- (void)setAllowedLockedFilePaths:(id)fp8;

@end

